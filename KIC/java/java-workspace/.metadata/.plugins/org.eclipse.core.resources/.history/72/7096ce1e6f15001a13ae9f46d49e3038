package JDBC_191203;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JDBCEx06_SELECT
{

	public static void main(String[] args)
	{
		// TODO Auto-generated method stub
		
		//접속경로는 데이터베이스 종류마다 다르다		
		String url = "jdbc:mysql://127.0.0.1:3306/employees";
		String userID = "root";
		String password = "123456";		

		Connection conn = null;
		Statement stmt = null;	
		ResultSet rs = null;
		
		
		try {
			//드라이버명도 데이터베이스 종류마다 다르다		
			Class.forName("org.mariadb.jdbc.Driver");
			
			conn = DriverManager.getConnection(url, userID, password);			
			stmt = conn.createStatement();
			
			String sql = ""; // SQLException
			
			// DML 처리
//			sql = String.format("INSERT INTO dept VALUES(%s, '%s', '%s')", "80", "기획부", "강릉");
//			sql = String.format("DELETE FROM dept WHERE deptno = %s", "80");
			
			// DDL 처리
//			sql = String.format("CREATE TABLE %s (col1 varchar(10), col2 varchar(10))", "테스트DB");
//			sql = String.format("DROP TABLE %s", "testtb1");
			
			//SELECT
//			sql = String.format("SELECT deptno, dname, loc FROM dept");
			//사원테이블에서 사원번호, 사원명, 급여, 연봉, 입사일을 출력하는 자바 프로그램 작성
			// 1. sql문 만들기 2. java로 전환
			sql = String.format("SELECT empno, ename, sal, sal*12, hiredate FROM emp");
						
			rs = stmt.executeQuery(sql);
			
			while(rs.next()){
				
//				System.out.printf("%s %s %s\n", rs.getString("deptno"), rs.getString("dname"), rs.getString("loc"));
				
//				System.out.printf("%s %s %s\n", rs.getString(1), rs.getString(2), rs.getString(3));//숫자(컬럼순서)로도 가능
				
				System.out.printf("%s \t%s \t%s  \t%s \t%s\n", rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5));
				
			}			
			
			
			
		} catch (ClassNotFoundException e) {
			System.out.println("ClassNotFoundException : " + e.getMessage());// 커스텀에러가 쓰기 편하다
		} catch (SQLException e) {
			System.out.println("SQLException : " + e.getMessage());
		} finally {
			
			if(conn != null) try {conn.close();} catch (Exception e2) {}
			if(stmt != null) try {stmt.close();} catch (Exception e2) {}	
			if(rs != null) try {rs.close();} catch (Exception e2) {}	
			
		}
		
		
		
		

	}

}
